{"version":3,"sources":["components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","utils/filterContact.js","components/App.jsx","index.js"],"names":["Form","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","undefined","props","contacts","find","contact","onAddContact","alert","onSubmit","this","type","onChange","Component","ContactList","onDeleteContact","length","map","id","key","onClick","ContactFilter","onChangeFilter","placeholder","propType","PropTypes","string","isRequired","func","filterContact","filter","toLowerCase","includes","App","changeFilter","addContact","contactToAdd","v4","prevState","deleteContact","item","getLocalStorageContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","document","getElementById"],"mappings":"qSAIqBA,G,kNAUnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,YAAkC,IAAD,IAA9BC,OAAUH,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBL,EAAOI,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEsB,KAApB,EAAKT,MAAMC,MAAqC,KAAtB,EAAKD,MAAME,YAI/BQ,IAFN,EAAKC,MAAMC,SAASC,MAClB,SAAAC,GAAO,OAAIA,EAAQb,OAAS,EAAKD,MAAMC,SAGzC,EAAKU,MAAMI,aAAX,eAA6B,EAAKf,QAClC,EAAKM,SAAS,CAAEL,KAAM,GAAIC,OAAQ,MAElCc,MAAM,GAAD,OAAI,EAAKhB,MAAMC,KAAf,2BAGPe,MAAM,+B,uDAKR,OACE,oCACE,0BAAMC,SAAUC,KAAKX,cACnB,sCAEE,2BACEY,KAAK,OACLlB,KAAK,OACLI,MAAOa,KAAKlB,MAAMC,KAClBmB,SAAUF,KAAKf,gBAGnB,wCAEE,2BACEgB,KAAK,SACLlB,KAAK,SACLI,MAAOa,KAAKlB,MAAME,OAClBkB,SAAUF,KAAKf,gBAGnB,4BAAQgB,KAAK,UAAb,qB,GA5DwBE,cCyBnBC,EA1BK,SAAC,GAAD,IAAGV,EAAH,EAAGA,SAAUW,EAAb,EAAaA,gBAAb,OAClBX,EAASY,OAAS,GAChB,6BACE,4BACGZ,EAASa,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,wBAAIyB,IAAKD,GACNzB,EADH,KACWC,EACT,4BAAQD,KAAMyB,EAAIE,QAASL,GAA3B,iB,gBCPNM,EAAgB,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOyB,EAAV,EAAUA,eAAV,OACpB,oCACE,uDAEE,2BACEX,KAAK,OACLd,MAAOA,EACPe,SAAUU,EACVC,YAAY,iCAMpBF,EAAcG,SAAW,CACvB3B,MAAO4B,IAAUC,OAAOC,WACxBL,eAAgBG,IAAUG,KAAKD,YAElBN,QCfAQ,EANO,SAACzB,EAAU0B,GAC/B,OAAO1B,EAAS0B,QAAO,SAAAxB,GAAO,OAC5BA,EAAQb,KAAKsC,cAAcC,SAASF,EAAOC,mB,QCK1BE,E,4MACnBzC,MAAQ,CACNY,SAAU,CACR,CAAEc,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEwB,GAAI,OAAQzB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEwB,GAAI,OAAQzB,KAAM,iBAAkBC,OAAQ,cAEhDoC,OAAQ,I,EAEVI,aAAe,SAAAlC,GACb,EAAKF,SAAS,CAAEgC,OAAQ9B,EAAEJ,OAAOC,S,EAGnCsC,WAAa,SAAA7B,GACX,IAAM8B,EAAY,aAChBlB,GAAImB,eACD/B,GAGL,EAAKR,UAAS,SAAAwC,GAAS,MAAK,CAC1BlC,SAAS,GAAD,mBAAMkC,EAAUlC,UAAhB,CAA0BgC,S,EAItCG,cAAgB,YAA2B,IAAd9C,EAAa,EAAvBG,OAAUH,KAC3B,EAAKK,UAAS,SAAAwC,GAAS,MAAK,CAC1BlC,SAAS,YAAKkC,EAAUlC,SAAS0B,QAAO,SAAAU,GAAI,OAAIA,EAAKtB,KAAOzB,W,kEAK9D,IAAMgD,EAA0BC,aAAaC,QAAQ,YACjDF,GACF/B,KAAKZ,SAAS,CAAEM,SAAUwC,KAAKC,MAAMJ,O,yCAItBK,EAAWR,GACxBA,EAAUlC,WAAaM,KAAKlB,MAAMY,UACpCsC,aAAaK,QAAQ,WAAYH,KAAKI,UAAUtC,KAAKlB,MAAMY,a,+BAIrD,IAAD,EACsBM,KAAKlB,MAA1BY,EADD,EACCA,SAAU0B,EADX,EACWA,OACZmB,EAAmBpB,EAAczB,EAAU0B,GAEjD,OACE,oCACE,yCACA,kBAAC,EAAD,CAAMvB,aAAcG,KAAKyB,WAAY/B,SAAUA,IAE/C,wCACCA,EAASY,QAAU,GAClB,kBAAC,EAAD,CAAenB,MAAOiC,EAAQR,eAAgBZ,KAAKwB,eAErD,kBAAC,EAAD,CACE9B,SAAU6C,EACVlC,gBAAiBL,KAAK6B,qB,GA3DC1B,aCHjCqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fccbf299.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './form.module.css';\r\n\r\nexport default class Form extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    ).isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.name !== '' && this.state.number !== '') {\r\n      if (\r\n        this.props.contacts.find(\r\n          contact => contact.name === this.state.name,\r\n        ) === undefined\r\n      ) {\r\n        this.props.onAddContact({ ...this.state });\r\n        this.setState({ name: '', number: '' });\r\n      } else {\r\n        alert(`${this.state.name} is alredy in contacts`);\r\n      }\r\n    } else {\r\n      alert('No data entered, try again');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"number\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add Contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) =>\r\n  contacts.length > 0 && (\r\n    <div>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id}>\r\n            {name}: {number}\r\n            <button name={id} onClick={onDeleteContact}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactFilter = ({ value, onChangeFilter }) => (\r\n  <>\r\n    <label>\r\n      Find Contacts by Name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n        placeholder=\"Type to filter contact...\"\r\n      />\r\n    </label>\r\n  </>\r\n);\r\n\r\nContactFilter.propType = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default ContactFilter;\r\n","const filterContact = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nexport default filterContact;\r\n","import React, { Component } from 'react';\r\nimport Form from './Form/Form';\r\nimport ContactList from './ContactList/ContactList';\r\nimport ContactFilter from './ContactFilter/ContactFilter';\r\nimport filterContact from '../utils/filterContact';\r\nimport { v4 } from 'uuid';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  addContact = contact => {\r\n    const contactToAdd = {\r\n      id: v4(),\r\n      ...contact,\r\n    };\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, contactToAdd],\r\n    }));\r\n  };\r\n\r\n  deleteContact = ({ target: { name } }) => {\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts.filter(item => item.id !== name)],\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const getLocalStorageContacts = localStorage.getItem('Contacts');\r\n    if (getLocalStorageContacts) {\r\n      this.setState({ contacts: JSON.parse(getLocalStorageContacts) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('Contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = filterContact(contacts, filter);\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <Form onAddContact={this.addContact} contacts={contacts} />\r\n\r\n        <h2>Contacts</h2>\r\n        {contacts.length >= 2 && (\r\n          <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}